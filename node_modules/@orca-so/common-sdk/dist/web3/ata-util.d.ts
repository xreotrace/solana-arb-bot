import type { Connection, PublicKey } from "@solana/web3.js";
import type BN from "bn.js";
import type { ResolvedTokenAddressInstruction, WrappedSolAccountCreateMethod } from "./token-util";
export declare function resolveOrCreateATA(connection: Connection, ownerAddress: PublicKey, tokenMint: PublicKey, getAccountRentExempt: () => Promise<number>, wrappedSolAmountIn?: BN, payer?: PublicKey, modeIdempotent?: boolean, allowPDAOwnerAddress?: boolean, wrappedSolAccountCreateMethod?: WrappedSolAccountCreateMethod): Promise<ResolvedTokenAddressInstruction>;
type ResolvedTokenAddressRequest = {
    tokenMint: PublicKey;
    wrappedSolAmountIn?: BN;
};
export declare function resolveOrCreateATAs(connection: Connection, ownerAddress: PublicKey, requests: ResolvedTokenAddressRequest[], getAccountRentExempt: () => Promise<number>, payer?: PublicKey, modeIdempotent?: boolean, allowPDAOwnerAddress?: boolean, wrappedSolAccountCreateMethod?: WrappedSolAccountCreateMethod): Promise<ResolvedTokenAddressInstruction[]>;
export {};
